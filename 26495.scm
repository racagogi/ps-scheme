(define (print-number lst)
  (do ((lst lst (cdr lst)))
    ((null? lst))
    (print (car lst))))
(let ((p0 '( "0000" "0  0" "0  0" "0  0" "0000"))
      (p1 '( "   1" "   1" "   1" "   1" "   1"))
      (p2 '( "2222" "   2" "2222" "2"    "2222"))
      (p3 '( "3333" "   3" "3333" "   3" "3333"))
      (p4 '( "4  4" "4  4" "4444" "   4" "   4"))
      (p5 '( "5555" "5"    "5555" "   5" "5555"))
      (p6 '( "6666" "6"    "6666" "6  6" "6666"))
      (p7 '( "7777" "   7" "   7" "   7" "   7"))
      (p8 '( "8888" "8  8" "8888" "8  8" "8888"))
      (p9 '( "9999" "9  9" "9999" "   9" "   9")))
  (do ((n (read-char) (read-char)))
    ((eof-object? n))
    (case (char->integer n)
      ((48) (print-number p0))
      ((49) (print-number p1))
      ((50) (print-number p2))
      ((51) (print-number p3))
      ((52) (print-number p4))
      ((53) (print-number p5))
      ((54) (print-number p6))
      ((55) (print-number p7))
      ((56) (print-number p8))
      ((57) (print-number p9)))
    (newline)))
