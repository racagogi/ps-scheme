(import (chicken io))
(define (read-n n)
  (do ((acc '() acc)
       (n n (- n 1)))
      ((= n 0) acc)
      (set! acc `(,@acc  ,@(string->list (read-line))))))

(let ((x (read))
      (y (read)))
  (read-line)
  (let ((before (read-n x)))
    (read-line)
    (let ((after (read-n x)))
      (do ((before before (cdr before))
           (after after (cdr after))
           (acc 0 acc))
        ((or (null? before) (null? after)) (print acc))
        (if (equal? (car after) (car before))
          (set! acc (+ acc 1)))))))
