(import (chicken io))
(import (chicken string))
(define (parse-time)
  (let ((time (map string->number (string-split (read-line) ":"))))
    (+ (* (car time) 3600) (* 60 (cadr time)) (caddr time))))
(define (print-time n)
  (let ((h (quotient n 3600))
        (m (quotient (modulo n 3600) 60))
        (s (modulo n 60)))
      (if (< h 10)
        (display 0))
      (display h)
      (display ":")
      (if (< m 10)
        (display 0))
      (display m)
      (display ":")
      (if (< s 10)
        (display 0))
      (display s)
      (newline)))
(let ((now (parse-time))
      (due (parse-time)))
  (if (> now due)
    (print-time (- 86400 (- now due)))
    (print-time (- due now))))
