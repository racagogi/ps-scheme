(import (chicken string))
(import (chicken io))
(define (coin-denomination)
  (define input (read-line))
  (define input-list (map string->number (cdr (string-split input " "))))
  (display "Denominations: ")
  (display (string-join (cdr (string-split input " ")) " "))
  (newline)
  (if (geometric-sequence? 0 input-list)
    (display "Good coin denominations!\n")
    (display "Bad coin denominations!\n")))

(define (string-join strings delimiter)
  (if (null? strings)
      ""
      (foldl (lambda (fst scd) (string-append fst delimiter scd))
            (car strings)
            (cdr strings))))

(define (geometric-sequence? from lst)
  (cond ((null? lst) #t)
        (else (if (<= (* from 2) (car lst))
               (geometric-sequence? (car lst) (cdr lst))
               #f))))

(do ((t (string->number (read-line)) (- t 1)))
  ((<= t 0))
  (coin-denomination)
  (newline))
