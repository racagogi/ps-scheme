(import (chicken foreign))
(foreign-declare "#include <stdio.h>")
(define fprint (foreign-lambda* void ((float f))
                                "printf(\"%.2f\\n\",f);"))
(do ((n (read) (- n 1))
     (acc 0 acc)
     (gp 0 gp))
  ((= n 0) (fprint (exact->inexact (/ acc gp))))
  (let ((name (read))
        (cgp (read))
        (cgrade (symbol->string (read))))
    (cond
      ((equal? cgrade "A+") (set! acc (+ acc (* 4.3 cgp))))
      ((equal? cgrade "A0") (set! acc (+ acc (* 4.0 cgp))))
      ((equal? cgrade "A-") (set! acc (+ acc (* 3.7 cgp))))
      ((equal? cgrade "B+") (set! acc (+ acc (* 3.3 cgp))))
      ((equal? cgrade "B0") (set! acc (+ acc (* 3.0 cgp))))
      ((equal? cgrade "B-") (set! acc (+ acc (* 2.7 cgp))))
      ((equal? cgrade "C+") (set! acc (+ acc (* 2.3 cgp))))
      ((equal? cgrade "C0") (set! acc (+ acc (* 2.0 cgp))))
      ((equal? cgrade "C-") (set! acc (+ acc (* 1.7 cgp))))
      ((equal? cgrade "D+") (set! acc (+ acc (* 1.3 cgp))))
      ((equal? cgrade "D0") (set! acc (+ acc (* 1.0 cgp))))
      ((equal? cgrade "D-") (set! acc (+ acc (* 0.7 cgp))))
      ((equal? cgrade "F") (set! acc (+ acc (* 0.0 cgp)))))
    (set! gp (+ gp cgp))))
