(let ((n (read))
      (cash (read)))
  (define save (make-vector n 0))
  (do ((i 0 (+ i 1))
       (save save save))
    ((= i n)
     (let* ((lsave (vector->list save))
            (acc (apply + lsave)))
           (do ((iter lsave (cdr iter)))
             ((null? (cdr iter)) (print (/ (* cash (car iter)) acc)))
             (print  (/ (* cash (car iter)) acc)))))
    (vector-set! save i (read))))
